name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build-linux:
    runs-on: ubuntu-18.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
            distribution: 'adopt' # See 'Supported distributions' for available options
            java-version: '8'


      - name: Build raylib
        run: |
          sudo apt update
          sudo apt install libasound2-dev mesa-common-dev libx11-dev libxrandr-dev libxi-dev xorg-dev libgl1-mesa-dev libglu1-mesa-dev
          cd raylib
          mkdir build
          cd build
          cmake -DWITH_PIC=on -DCMAKE_BUILD_TYPE=Release ..
          make -j2
          sudo make install

      - name: Build jaylib
        env:
          RAYLIB_VERSION: 4.0.0
          RAYLIB_PLATFORM: linux-x86_64
        run: |
          ./build-java.sh
          ./build-native.sh
          ./build-docs.sh

      - name: Upload jar
        uses: actions/upload-artifact@v2.2.4
        with:
          name: jar
          path: ./*.jar

  build-mac:
    runs-on: macos-10.15
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.14

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '8'


      - name: Build raylib
        run: |
          cd raylib/src
          make -j2
          sudo cp libraylib.a /usr/local/lib/

      - name: Build jaylib
        env:
          RAYLIB_VERSION: 4.0.0
          RAYLIB_PLATFORM: macosx-x86_64
        run: |
          ./build-java.sh
          ./build-native.sh

      - name: Upload jar
        uses: actions/upload-artifact@v2.2.4
        with:
          name: jar
          path: ./*macosx-x86_64*.jar

  build-windows:
    runs-on: windows-2019

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '8'


      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Build raylib
        run: |
          cd raylib
          mkdir build
          cd build
          cmake -DWITH_PIC=on -DCMAKE_BUILD_TYPE=Release ..
          msbuild raylib.sln /target:raylib /property:Configuration=Release
          copy raylib\Release\raylib.lib ..\..
          cd ..\..
        shell: cmd

      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build jaylib
        env:
          RAYLIB_VERSION: 4.0.0
          RAYLIB_PLATFORM: windows-x86_64
        run: |
          build-windows.bat
        shell: cmd

      - name: Upload jar
        uses: actions/upload-artifact@v2.2.4
        with:
          name: jar
          path: ./*.jar